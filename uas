import java.util.*;
import java.io.*;

class Main {


    static class Lokasi {
        int x, y;

        Lokasi(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
static class Tepi implements Comparable<Tepi> {
    double berat;
    int u, v;

    Tepi(double berat, int u, int v) {
        this.berat = berat;
        this.u = u;
        this.v = v;
    }

    public int compareTo(Tepi lain) {
        return Double.compare(this.berat, lain.berat);
    }

}
static class DisjointSet {
    int[] induk, peringkat;

    DisjointSet(int n) {
        induk = new int[n];
        peringkat = new int[n];
        for (int i = 0; i < n; i++) {
            induk[i] = i;
            peringkat[i] = 0;
        }
    }

  
    int find(int u) {
        if (u != induk[u]) {
            induk[u] = find(induk[u]);
        }
        return induk[u];
    }
  void union(int u, int v) {
        int rootU = find(u);
        int rootV = find(v);
        if (rootU != rootV) {
            if (peringkat[rootU] > peringkat[rootV]) {
                induk[rootV] = rootU;
            } else if (peringkat[rootU] < peringkat[rootV]) {
                induk[rootU] = rootV;
            } else {
                induk[rootV] = rootU;
                peringkat[rootU]++;
            }
        }
    }
}
public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    List<Double> hasil = new ArrayList<>();
